import logging
import os
import openai
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

logging.basicConfig(level=logging.INFO)

user_states = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["üìù –ö–æ–Ω—Ç–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä", "üé® –î–∏–∑–∞–π–Ω–µ—Ä"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥–∏—Ä, —Å —á–µ–≥–æ –Ω–∞—á–Ω—ë–º?", reply_markup=reply_markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user_id = update.effective_user.id

    if text == "üé® –î–∏–∑–∞–π–Ω–µ—Ä":
        keyboard = [["üñº –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç 4:5", "üì± –°—Ç–æ—Ä–∏—Å –¥–ª—è Instagram"],
                    ["üß∑ –í—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç", "üé® –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ–Ω"],
                    ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –¥–∏–∑–∞–π–Ω–µ—Ä–∞:", reply_markup=reply_markup)

    elif text == "üñº –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç 4:5":
        user_states[user_id] = "awaiting_prompt"
        await update.message.reply_text("–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏? –û–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ.")

    elif text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        keyboard = [["üìù –ö–æ–Ω—Ç–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä", "üé® –î–∏–∑–∞–π–Ω–µ—Ä"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–ö–æ–º–∞–Ω–¥–∏—Ä, —Å —á–µ–≥–æ –Ω–∞—á–Ω—ë–º?", reply_markup=reply_markup)

    elif user_states.get(user_id) == "awaiting_prompt":
        prompt = text
        await update.message.reply_text("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ... üé®")

        try:
            response = openai.images.generate(
                model="dall-e-3",
                prompt=prompt,
                size="1024x1024",
                quality="standard",
                n=1
            )
            image_url = response.data[0].url
            await update.message.reply_photo(photo=image_url, caption="–ì–æ—Ç–æ–≤–æ, –ö–æ–º–∞–Ω–¥–∏—Ä ‚úÖ")
        except Exception as e:
            await update.message.reply_text(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")

        user_states.pop(user_id, None)

    else:
        await update.message.reply_text("–°–∫–æ—Ä–æ –ø–æ–¥–∫–ª—é—á—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ –≤–∏–∑—É–∞–ª, –∂–∞–Ω—ã–º. –≠—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ üé®")

if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()